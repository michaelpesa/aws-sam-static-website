AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: SAM template for deploying a static website and CloudFront distribution
Parameters:
  DomainName:
    Type: String
    Description: Domain name
  HostedZoneId:
    Type: String
    Description: Hosted zone ID
  CFDistributionPriceClass:
    Type: String
    Default: PriceClass_All
    AllowedValues:
    - PriceClass_All
    - PriceClass_100
    - PriceClass_200
    Description: Price class for CloudFront distribution
Resources:
  CFOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment:
          Fn::Sub: ${DomainName} CloudFront OAI
  LogBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: logs.${DomainName}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Ref: DomainName
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: WebsiteBucket
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action: s3:GetObject
          Principal:
            CanonicalUser:
              Fn::GetAtt:
              - CFOriginAccessIdentity
              - S3CanonicalUserId
          Resource:
            Fn::Sub: arn:aws:s3:::${WebsiteBucket}/*
  WebCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName:
        Ref: DomainName
      SubjectAlternativeNames:
      - Fn::Sub: www.${DomainName}
      ValidationMethod: DNS
      DomainValidationOptions:
      - DomainName:
          Ref: DomainName
        HostedZoneId:
          Ref: HostedZoneId
      - DomainName:
          Fn::Sub: www.${DomainName}
        HostedZoneId:
          Ref: HostedZoneId
  CFDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: 'true'
        Comment:
          Fn::Sub: Distribution for ${DomainName}
        HttpVersion: http2
        PriceClass:
          Ref: CFDistributionPriceClass
        DefaultRootObject: index.html
        Aliases:
        - Ref: DomainName
        - Fn::Sub: www.${DomainName}
        Origins:
        - Id:
            Fn::Sub: S3-${DomainName}
          DomainName:
            Fn::Sub: ${DomainName}.s3.amazonaws.com
          S3OriginConfig:
            OriginAccessIdentity:
              Fn::Sub: origin-access-identity/cloudfront/${CFOriginAccessIdentity}
        DefaultCacheBehavior:
          TargetOriginId:
            Fn::Sub: S3-${DomainName}
          Compress: true
          LambdaFunctionAssociations:
          - EventType: viewer-request
            LambdaFunctionARN:
              Ref: LambdaEdgeRedirectFunction.Version
          ForwardedValues:
            QueryString: false
            Headers:
            - Origin
            Cookies:
              Forward: none
          ViewerProtocolPolicy: allow-all
        CustomErrorResponses:
        - ErrorCode: '403'
          ResponsePagePath: /404.html
          ResponseCode: '404'
          ErrorCachingMinTTL: '30'
        ViewerCertificate:
          AcmCertificateArn:
            Ref: WebCertificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2019
        Logging:
          IncludeCookies: false
          Bucket:
            Fn::Sub: logs.${DomainName}.s3.amazonaws.com
          Prefix: cf-logs
  LambdaEdgeRedirectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://michaelpesa/70dd43fe91e805539d3cedf4c0a7c4c2
      Role:
        Fn::GetAtt:
        - LambdaEdgeRedirectFunctionRole
        - Arn
      Runtime: nodejs10.x
      Handler: index.handler
      Timeout: 5
      AutoPublishAlias: live
  LambdaEdgeRedirectFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: AllowLambdaServiceToAssumeRole
          Effect: Allow
          Action:
          - sts:AssumeRole
          Principal:
            Service:
            - lambda.amazonaws.com
            - edgelambda.amazonaws.com
  DNSRecordSet:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      Comment:
        Fn::Sub: DNS records for ${DomainName}
      HostedZoneId:
        Ref: HostedZoneId
      RecordSets:
      - Name:
          Ref: DomainName
        Type: A
        AliasTarget:
          DNSName:
            Fn::GetAtt:
            - CFDistribution
            - DomainName
          EvaluateTargetHealth: false
          HostedZoneId: Z2FDTNDATAQYW2
      - Name:
          Ref: DomainName
        Type: AAAA
        AliasTarget:
          DNSName:
            Fn::GetAtt:
            - CFDistribution
            - DomainName
          EvaluateTargetHealth: false
          HostedZoneId: Z2FDTNDATAQYW2
      - Name:
          Fn::Sub: www.${DomainName}
        Type: A
        AliasTarget:
          DNSName:
            Fn::GetAtt:
            - CFDistribution
            - DomainName
          EvaluateTargetHealth: false
          HostedZoneId: Z2FDTNDATAQYW2
      - Name:
          Fn::Sub: www.${DomainName}
        Type: AAAA
        AliasTarget:
          DNSName:
            Fn::GetAtt:
            - CFDistribution
            - DomainName
          EvaluateTargetHealth: false
          HostedZoneId: Z2FDTNDATAQYW2
